name: Publish a new release

on:
  push:
    tags:
      - "v*"
      
jobs:

  realease:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    
    - name: Assign version without leading `v`to VERSION env
      run: echo VERSION=`echo "${{ github.ref_name }}" | sed -e 's/^v//'` >> $GITHUB_ENV
    
    - name: Update version in Chart.yaml and in Cargo.toml
      run: |
        sed -i "s/version: .*/version: \"${{ env.VERSION }}\"/g" ./charts/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"${{ env.VERSION }}\"/g" ./charts/Chart.yaml
        sed -i "0,/version = .*/s//version = \"${{ env.VERSION }}\"/" ./ctrl/Cargo.toml

    - name: Commit modified files
      uses: EndBug/add-and-commit@v9.1.3
      with:
        add: '-f charts/Chart.yaml ctrl/Cargo.toml'
        message: 'Update version to ${{ github.ref_name }}'
        push: "origin HEAD:main"     
        
    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}
    
    - name: Build the Docker image and push it to ghcr.io
      run: |
        docker build . --file Dockerfile --tag ghcr.io/its4u/cert-manager-routes-controller:${{ env.VERSION }}
        docker push ghcr.io/its4u/cert-manager-routes-controller:${{ env.VERSION }}

    - name: Install Helm
      uses: azure/setup-helm@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.5.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        CR_SKIP_EXISTING: false

